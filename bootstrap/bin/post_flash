#!/bin/bash
set -e

. bin/utils.sh

cleanup() {
  # Move away from the mounted directory so we can unmount it
  cd

  if [ -d "$BOOT_PATH" ]; then
    sudo umount "$BOOT_PATH"
    sudo rm -rf "$BOOT_PATH"
  fi

  if [ -d "$ROOTFS_PATH" ]; then
    sudo umount "$ROOTFS_PATH"
    sudo rm -rf "$ROOTFS_PATH"
  fi
}

BOOT_PATH="/media/${USER}/boot"

if [ -d "$BOOT_PATH" ]; then
  cleanup
fi

# Find partition name
BOOT_PART_PATH=$(ls -1 ${SD_PATH}* | tail -n2 | head -n1)
echo boot_partition_path="${BOOT_PART_PATH}"
ROOTFS_PART_PATH=$(ls -1 ${SD_PATH}* | tail -n1)
echo rootfs_partition_path="${ROOTFS_PART_PATH}"

# Mount boot
sudo mkdir -p "$BOOT_PATH"
sudo mount "${BOOT_PART_PATH}" "$BOOT_PATH"
trap cleanup ERR
sudo cp boot/* "$BOOT_PATH"

# Configure PoE hat fan curves
# WARNING!! This is not idempotent!!
cat files/config.txt | sudo tee -a "${BOOT_PATH}/config.txt"

cd "$BOOT_PATH"

# Configure WiFi credentials if ssid and psk are provided. Otherwise disable wifi
if [ ! -z "${WIFI_SSID}" ] && [ ! -z "${WIFI_PSK}" ]; then
  echo 'Configuring wifi'
  sudo mv wpa_supplicant.conf wpa_supplicant.conf.input
  sudo sh -c "WIFI_SSID='${WIFI_SSID}' WIFI_PSK='${WIFI_PSK}' envsubst < wpa_supplicant.conf.input > wpa_supplicant.conf"
  sudo rm wpa_supplicant.conf.input
else
  echo 'Disabling wifi'
  cfg="dtoverlay=disable-wifi"
  path="${BOOT_PATH}/config.txt"
  grep -qxF "$cfg" "$path" || echo "$cfg" | sudo tee -a "$path"
fi

# Enable ethernet over USB
# sudo sh -c "echo 'dtoverlay=dwc2' >> config.txt"
# # Append config to load usb as ethernet. Append must be to the first line, not a new line
# sudo sh -c "sed -i '${s/$/ modules-load=dwc2,g_ether/}' cmdline.txt" # TODO: this isn't working

# Enable cgroup

# Mount rootfs
ROOTFS_PATH="/media/${USER}/rootfs"
sudo mkdir -p "$ROOTFS_PATH"
sudo mount "${ROOTFS_PART_PATH}" "$ROOTFS_PATH"

cd "$ROOTFS_PATH"

# Change hostname
sudo sh -c "sudo echo "$RPI_HOSTNAME" > etc/hostname"
sudo sh -c "sed -i "s/raspberrypi/${RPI_HOSTNAME}/" etc/hosts"

cleanup
